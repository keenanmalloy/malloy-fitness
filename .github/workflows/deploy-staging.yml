name: Migrate and Deploy Staging

on:
  push:
    branches:
      - main

jobs:
  migrate-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '2'

      - name: Get changed files in /server
        id: server-changes
        uses: tj-actions/changed-files@v1.1.2
        with:
          files: |
            server

      - name: If changes to service, attempt to migrate
        id: migrate-if-changes
        if: server-changes.outputs.any_changed == 'true'
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        uses: actions/setup-node@v3
        with:
          node-version: '16.10'
        run: npm ci && npm run migrate

      - name: If changes to service, and successfully migrated, deploy to Heroku
        if: migrate-if-changes.status == success && server-changes.outputs.any_changed == 'true'
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_API_STAGING_APP_NAME }}
          dockerfile_directory: ./server/
          dockerfile_name: Dockerfile

      - name: Get changed files in client
        id: client-changes
        uses: tj-actions/changed-files@v1.1.2
        with:
          files: |
            client

      - name: If changes to service, and successfully migrated, deploy to Vercel
        if: migrate-if-changes.status == success && client-changes.outputs.any_changed == 'true'
        uses: amondnet/vercel-action@v20.0.0
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          vercel-org-id: ${{ secrets.VERCEL_ORGANIZATION_ID}} #Required
          vercel-project-id: ${{ secrets.VERCEL_STAGING_APP_PROJECT_ID}} #Required
          vercel-args: '--prod' #Optional
          working-directory: ./client
